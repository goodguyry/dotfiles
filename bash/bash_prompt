#!/bin/bash

# @gf3’s Sexy Bash Prompt, inspired by “Extravagant Zsh Prompt”
# Shamelessly copied from https://github.com/gf3/dotfiles
# Screenshot: http://i.imgur.com/s0Blh.png

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
  export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
  export TERM=xterm-256color
fi

BLACK="\e[38;5;0m"
RED="\e[38;5;196m"
GREEN="\e[38;5;2m"
YELLOW="\e[38;5;3m"
BLUE="\e[38;5;67m"
PURPLE="\e[38;5;55m"
MAGENTA="\e[38;5;95m"
CYAN="\e[38;5;45m"
WHITE="\e[38;5;15m"
RESET="\\e[0m"
GRAY="\e[38;5;240m"
LTGRAY="\e[38;5;249m"
VIOLET="\e[38;5;60m"
ORANGE="\e[38;5;202m"

export BLACK
export RED
export GREEN
export YELLOW
export BLUE
export PURPLE
export MAGENTA
export CYAN
export WHITE
export RESET
export GRAY
export LTGRAY
export BLUEGRAY
export ORANGE

function parse_git_dirty() {
  [[ $(git status 2> /dev/null | tail -n1) != *"working directory clean"* ]] && echo " ∆"
}

function parse_git_branch() {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

# New line to create space
PS1="\n"
# Current time
PS1+="\[$GRAY\]\T";
# Separator
PS1+=" - ";
# User@Host
PS1+="\u@\h";
# New line
PS1+="\n";
# Current directory
PS1+="\[$BLUE\]\$(PWD)";
# "on" if a Git repo
PS1+="\[$GRAY\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")";
# Branch if a Git repo
PS1+="\[$ORANGE\]\$(parse_git_branch)";
# Prompt on a new line
PS1+="\n\[$BLUE\]\$ \[$LTGRAY\]";

export PS1;

export PS2="\[$BLUE\]: \[$LTGRAY\]";
