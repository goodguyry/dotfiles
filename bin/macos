#!/bin/bash
#
# Copyright (c) 2024 Ryan Domingue and contributors
# Report bugs at: https://github.com/goodguyry/dotfiles/issues
#
# This is free software with ABSOLUTELY NO WARRANTY.
#
# usage: macos
#
# Set Application, User and System-wide preferences for macOS.

# Source utils.
DOTFILES_DIRECTORY="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )";
source "${DOTFILES_DIRECTORY}/var/helpers.sh";

# Ask for the administrator password upfront.
sudo -v;
# Keep-alive: update existing `sudo` time stamp until `macos` has finished.
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

# Get the computer name.
COMPUTERNAME="$(sudo systemsetup -getcomputername)";
# Present computer name and ask if it should be changed.
printf "\n";
log_warning "Current ${COMPUTERNAME}";
printf "Would you like to change it? [y/N] ";
read CONTINUE;
printf "\n";

# Set computer name (as done via System Preferences → Sharing).
if [[ "${CONTINUE}" =~ ^[Yy]$ || "${CONTINUE}" != '' ]]; then
  printf "Computer name: -> ";
  read CNAME;
  sudo scutil --set COMPUTERNAME "${CNAME}";
  sudo scutil --set HostName "${CNAME}";
  sudo scutil --set LocalHostName "${CNAME}";
  sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string "${CNAME}";
  echo "${CNAME} set.";
fi

#==================================================
# Dock

# Wipe all (default) app icons from the Dock.
defaults write com.apple.dock persistent-apps -array;

# Put the dock on the right edge of the screen.
defaults write com.apple.dock orientation -string 'right';

# Minimize applications to their Dock icon.
defaults write com.apple.dock minimize-to-application -bool true;

# Swipe up over Dock icons to show an app's window(s).
defaults write com.apple.dock scroll-to-open -bool TRUE; killall Dock;

# Single Application Mode.
# After years of enjoying this feature, I now find it annoying all of the sudden.
# defaults write com.apple.dock single-app -bool true

# Translucent Hidden Applications.
defaults write com.apple.Dock showhidden -bool true;

# Set the icon size of Dock items to 40 pixels.
defaults write com.apple.dock tilesize -int 40;

# Show indicator lights for open applications in the Dock.
defaults write com.apple.dock show-process-indicators -bool false;

# Enable spring loading for all Dock items.
defaults write com.apple.dock enable-spring-load-actions-on-all-items -bool true;

# Stacks gradient on hover.
defaults write com.apple.dock mouse-over-hilite-stack -bool true;

# Don’t automatically rearrange Spaces based on most recent use.
defaults write com.apple.dock mru-spaces -bool false;

# Add iOS Simulator to Launchpad.
[[ -r /Applications/Xcode.app/Contents/Developer/Applications/Simulator.app ]] && \
  sudo ln -sf /Applications/Xcode.app/Contents/Developer/Applications/Simulator.app \
    /Applications/Simulator.app;

# Hot corners
# Possible values:
#  0: no-op
#  2: Mission Control
#  3: Show application windows
#  4: Desktop
#  5: Start screen saver
#  6: Disable screen saver
#  7: Dashboard
# 10: Put display to sleep
# 11: Launchpad
# 12: Notification Center

# Top left screen corner → Desktop.
defaults write com.apple.dock wvous-tl-corner -int 4;
defaults write com.apple.dock wvous-tl-modifier -int 0;
# Top right screen corner → Mission Control.
defaults write com.apple.dock wvous-tr-corner -int 2;
defaults write com.apple.dock wvous-tr-modifier -int 0;
# Bottom left screen corner → Show application windows.
defaults write com.apple.dock wvous-bl-corner -int 3;
defaults write com.apple.dock wvous-bl-modifier -int 0;

#==================================================
# Finder

# Hide icons for hard drives.
# Show icons for servers, and removable media on the desktop.
defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool false;
defaults write com.apple.finder ShowHardDrivesOnDesktop -bool false;
defaults write com.apple.finder ShowMountedServersOnDesktop -bool true;
defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true;

# Finder: show all filename extensions.
defaults write NSGlobalDomain AppleShowAllExtensions -bool true;

# Remove the proxy icon hover delay in Big Sur
defaults write -g NSToolbarTitleViewRolloverDelay -float 0

# Finder: show status bar.
defaults write com.apple.finder ShowStatusBar -bool true;

# Finder: show path bar.
defaults write com.apple.finder ShowPathbar -bool true;

# When performing a search, search the current folder by default.
defaults write com.apple.finder FXDefaultSearchScope -string 'SCcf';

# Disable the warning when changing a file extension.
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false;

# Enable spring loading for directories.
defaults write NSGlobalDomain com.apple.springing.enabled -bool true;

# Remove the spring loading delay for directories.
defaults write NSGlobalDomain com.apple.springing.delay -float 0;

# Avoid creating .DS_Store files on network volumes.
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true;

# Show item info near icons on the desktop and in other icon views.
/usr/libexec/PlistBuddy -c 'Set :DesktopViewSettings:IconViewSettings:showItemInfo true' \
  "${HOME}/Library/Preferences/com.apple.finder.plist";
/usr/libexec/PlistBuddy -c 'Set :FK_StandardViewSettings:IconViewSettings:showItemInfo true' \
  "${HOME}/Library/Preferences/com.apple.finder.plist";
/usr/libexec/PlistBuddy -c 'Set :StandardViewSettings:IconViewSettings:showItemInfo true' \
  "${HOME}/Library/Preferences/com.apple.finder.plist";

# Show item info to the right of the icons on the desktop.
/usr/libexec/PlistBuddy -c 'Set :DesktopViewSettings:IconViewSettings:labelOnBottom false' \
  "${HOME}/Library/Preferences/com.apple.finder.plist";
/usr/libexec/PlistBuddy -c 'Set :FK_StandardViewSettings:IconViewSettings:labelOnBottom false' \
  "${HOME}/Library/Preferences/com.apple.finder.plist";
/usr/libexec/PlistBuddy -c 'Set :StandardViewSettings:IconViewSettings:labelOnBottom false' \
  "${HOME}/Library/Preferences/com.apple.finder.plist";

# Enable snap-to-grid for icons on the desktop and in other icon views.
/usr/libexec/PlistBuddy -c 'Set :DesktopViewSettings:IconViewSettings:arrangeBy name' \
  "${HOME}/Library/Preferences/com.apple.finder.plist";
/usr/libexec/PlistBuddy -c 'Set :FK_StandardViewSettings:IconViewSettings:arrangeBy name' \
  "${HOME}/Library/Preferences/com.apple.finder.plist";
/usr/libexec/PlistBuddy -c 'Set :StandardViewSettings:IconViewSettings:arrangeBy name' \
  "${HOME}/Library/Preferences/com.apple.finder.plist";

# Increase grid spacing for icons on the desktop and in other icon views.
/usr/libexec/PlistBuddy -c 'Set :DesktopViewSettings:IconViewSettings:gridSpacing 40' \
  "${HOME}/Library/Preferences/com.apple.finder.plist";
/usr/libexec/PlistBuddy -c 'Set :FK_StandardViewSettings:IconViewSettings:gridSpacing 50' \
  "${HOME}/Library/Preferences/com.apple.finder.plist";
/usr/libexec/PlistBuddy -c 'Set :StandardViewSettings:IconViewSettings:gridSpacing 50' \
  "${HOME}/Library/Preferences/com.apple.finder.plist";

# Increase the size of icons on the desktop and in other icon views.
/usr/libexec/PlistBuddy -c 'Set :DesktopViewSettings:IconViewSettings:iconSize 40' \
  "${HOME}/Library/Preferences/com.apple.finder.plist";
/usr/libexec/PlistBuddy -c 'Set :FK_StandardViewSettings:IconViewSettings:iconSize 60' \
  "${HOME}/Library/Preferences/com.apple.finder.plist";
/usr/libexec/PlistBuddy -c 'Set :StandardViewSettings:IconViewSettings:iconSize 60' \
  "${HOME}/Library/Preferences/com.apple.finder.plist";

# Use icon view in all Finder windows by default.
# Four-letter codes for the other view modes: 'Nlsv' `icnv`, `clmv`, `Flwv`.
defaults write com.apple.finder FXPreferredViewStyle -string 'icnv';

# Enable Air Drop on old Macs.
defaults write com.apple.NetworkBrowser BrowseAllInterfaces -bool true;

# Enable Copy from Quick Look.
defaults write com.apple.finder QLEnableTextSelection -bool true;

# Show Library Folder.
chflags nohidden "${HOME}/Library";

# Keep Quick Look window on top of other applications.
defaults write com.apple.finder QLHidePanelOnDeactivate -bool false;

# Set file progress window location to top-left of screen.
defaults write com.apple.finder CopyProgressWindowLocation -string '{92, 22}';

# Open new Finder windows to home folder.
defaults write com.apple.finder NewWindowTarget -string 'PfHm';

# Set sidebar icon size to small.
defaults write NSGlobalDomain NSTableViewDefaultSizeMode -int 1;

# Set Expanded Print Menu as Default.
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true;
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true;

# Set Expanded Save Menus as Default.
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true;
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true;

# Change the default save location from iCloud to On My Mac.
defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false;

#==================================================
# Terminal

# Opt-Click to Move Terminal Cursor.
defaults write com.apple.Terminal OptionClickToMoveCursor -bool true;

# Only use UTF-8 in Terminal.app.
defaults write com.apple.terminal StringEncodings -array 4;

# Use my theme by default in Terminal.app.
if [[ -r "${DOTFILES_DIRECTORY}/etc/GoodGuyRy.terminal" ]]; then
  open "${DOTFILES_DIRECTORY}/etc/GoodGuyRy.terminal";
  sleep 2; # Wait a bit to make sure the theme is loaded.
  defaults write com.apple.terminal 'Default Window Settings' -string 'GoodGuyRy';
  defaults write com.apple.terminal 'Startup Window Settings' -string 'GoodGuyRy';
fi;

#==================================================
# Trackpad, mouse, keyboard, Bluetooth accessories, and input

# List of plist files.
declare -a TRACKPAD_PLISTS=(
  com.apple.AppleMultitouchTrackpad.plist
  com.apple.driver.AppleBluetoothMultitouch.trackpad
);

# Enable tap to click and dragging without DragLock.
# (System Preferences > Accessibility > Mouse & Trackpad > Trackpad options...).
defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 2;
defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 2;

# Enable tap to click and dragging without DragLock for builtin and Bluetooth trackpads.
for TRACKPAD_PLIST in ${TRACKPAD_PLISTS[*]}; do
  defaults write "${TRACKPAD_PLIST}" Clicking -bool true;
  defaults write "${TRACKPAD_PLIST}" DragLock -bool false;
  defaults write "${TRACKPAD_PLIST}" Dragging -bool true;
done;

# Set up global swipe gestures.
defaults write NSGlobalDomain AppleEnableSwipeNavigateWithScrolls -bool true;
defaults -currentHost write NSGlobalDomain com.apple.trackpad.threeFingerHorizSwipeGesture -int 1;

# Set up swipe gestures for builtin and Bluetooth trackpads.
for TRACKPAD_PLIST in ${TRACKPAD_PLISTS[*]}; do
  defaults write "${TRACKPAD_PLIST}" HIDScrollZoomModifierMask -int 0;
  defaults write "${TRACKPAD_PLIST}" TrackpadCornerSecondaryClick -int 0;
  defaults write "${TRACKPAD_PLIST}" TrackpadFiveFingerPinchGesture -int 2;
  defaults write "${TRACKPAD_PLIST}" TrackpadFourFingerHorizSwipeGesture -int 2;
  defaults write "${TRACKPAD_PLIST}" TrackpadFourFingerPinchGesture -int 2;
  defaults write "${TRACKPAD_PLIST}" TrackpadFourFingerVertSwipeGesture -int 2;
  defaults write "${TRACKPAD_PLIST}" TrackpadHandResting -bool true;
  defaults write "${TRACKPAD_PLIST}" TrackpadHorizScroll -int 1;
  defaults write "${TRACKPAD_PLIST}" TrackpadMomentumScroll -int 1;
  defaults write "${TRACKPAD_PLIST}" TrackpadPinch -int 1;
  defaults write "${TRACKPAD_PLIST}" TrackpadRightClick -int 1;
  defaults write "${TRACKPAD_PLIST}" TrackpadRotate -int 1;
  defaults write "${TRACKPAD_PLIST}" TrackpadScroll -int 1;
  defaults write "${TRACKPAD_PLIST}" TrackpadThreeFingerDoubleTapGesture -int 2;
  defaults write "${TRACKPAD_PLIST}" TrackpadThreeFingerDrag -bool false;
  defaults write "${TRACKPAD_PLIST}" TrackpadThreeFingerHorizSwipeGesture -int 1;
  defaults write "${TRACKPAD_PLIST}" TrackpadThreeFingerTapGesture -int 2;
  defaults write "${TRACKPAD_PLIST}" TrackpadThreeFingerVertSwipeGesture -int 1;
  defaults write "${TRACKPAD_PLIST}" TrackpadTwoFingerDoubleTapGesture -int 1;
  defaults write "${TRACKPAD_PLIST}" TrackpadTwoFingerFromRightEdgeSwipeGesture -int 3;
done;

# Increase sound quality for Bluetooth headphones/headsets.
defaults write com.apple.BluetoothAudioAgent 'Apple Bitpool Min (editable)' -int 40;

# Enable full keyboard access for all controls.
defaults write NSGlobalDomain AppleKeyboardUIMode -int 3;

# Disable press-and-hold for keys in favor of key repeat.
defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false

# Set a fast keyboard repeat rate.
defaults write NSGlobalDomain KeyRepeat -int 2
defaults write NSGlobalDomain InitialKeyRepeat -int 35

#==================================================
# System & Misc.

# System info in login window.
# (SystemVersion, SerialNumber, IPAddress, DSStatus, Time, HostName).
sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo SystemVersion;

# Set menu extras.
defaults write com.apple.systemuiserver menuExtras -array \
  '/System/Library/CoreServices/Menu Extras/Bluetooth.menu' \
  '/System/Library/CoreServices/Menu Extras/Battery.menu' \
  '/System/Library/CoreServices/Menu Extras/AirPort.menu' \
  '/System/Library/CoreServices/Menu Extras/Clock.menu';

# Blocklist some menu extras.
for DOMAIN in ~/Library/Preferences/ByHost/com.apple.systemuiserver.*; do
  defaults write "${DOMAIN}" dontAutoLoad -array \
    '/System/Library/CoreServices/Menu Extras/TimeMachine.menu' \
    '/System/Library/CoreServices/Menu Extras/Volume.menu' \
    '/System/Library/CoreServices/Menu Extras/User.menu';
done;

# Set highlight color to green.
defaults write NSGlobalDomain AppleHighlightColor -string '0.764700 0.976500 0.568600';

# Enable Dark Mode
defaults write NSGlobalDomain AppleInterfaceStyle -string 'Dark';

# Turn off character palette on key hold.
defaults write -g ApplePressAndHoldEnabled -bool false;

# Turn off rubberband scrolling.
defaults write -g NSScrollViewRubberbanding -bool false;

# Get the login message.
LOGINMESSAGE="$(sudo defaults read /Library/Preferences/com.apple.loginwindow LoginwindowText)";
# Present current login message and ask if it should be changed.
printf "\n";
log_warning "Login message: '${LOGINMESSAGE}'";
printf 'Would you like to change it? [y/N] ';
read CHANGE;
printf "\n";

if [[ "${CHANGE}" =~ ^[Yy]$ || "${CHANGE}" != '' ]]; then
  # Read the input and set the message.
  printf 'Login message: -> ';
  read NEWLOGINMESSAGE;
  sudo defaults write /Library/Preferences/com.apple.loginwindow LoginwindowText "${NEWLOGINMESSAGE}";
fi

# Disable Resume system-wide.
defaults write NSGlobalDomain NSQuitAlwaysKeepsWindows -bool false;

# Set language and text formats.
defaults write NSGlobalDomain AppleLanguages -array 'en' 'nl';
defaults write NSGlobalDomain AppleLocale -string 'en_US@currency=USD';
defaults write NSGlobalDomain AppleMeasurementUnits -string 'Inches';
defaults write NSGlobalDomain AppleMetricUnits -bool false;

# Set the timezone; see `systemsetup -listtimezones` for other values.
sudo systemsetup -settimezone 'America/Los_Angeles' > /dev/null;

# Set amount of idle time until computer, display and hard disk sleep to <minutes>.
sudo systemsetup -setsleep 15 > /dev/null;

# Set amount of idle time until computer sleeps to <minutes>.
sudo systemsetup -setcomputersleep 10 > /dev/null;

# Set amount of idle time until display sleeps to <minutes>.
sudo systemsetup -setdisplaysleep 3 > /dev/null;

# Set amount of idle time until hard disk sleeps to <minutes>.
sudo systemsetup -setharddisksleep 15 > /dev/null;

# Set wake on network access to either <on> or <off>.
sudo systemsetup -setwakeonnetworkaccess on > /dev/null;

# Create the Screenshots directory if it doesn't exist.
# SystemUIServer won't create it for us.
if [[ ! -d "${HOME}/Pictures/Screenshots" ]]; then
  mkdir "${HOME}/Pictures/Screenshots";
fi;

# Change screen shot location.
defaults write com.apple.screencapture location -string "${HOME}/Pictures/Screenshots";

# Save screenshots in PNG format.
defaults write com.apple.screencapture type -string 'png';

# Remove shadows from screenshots.
defaults write com.apple.screencapture disable-shadow -bool true;

# Automatically quit printer app once the print jobs complete.
defaults write com.apple.print.PrintingPrefs 'Quit When Finished' -bool true;

# Prevent Time Machine from prompting to use new hard drives as backup volume.
defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true;

#==================================================
# Misc applications

# Copy email addresses as `foo@example.com` instead of `Foo Bar <foo@example.com>` in Mail.app.
defaults write com.apple.mail AddressesIncludeNameOnPasteboard -bool false;

# Use plain text mode for new TextEdit documents.
defaults write com.apple.TextEdit RichText -int 0;

# Open and save files as UTF-8 in TextEdit.
defaults write com.apple.TextEdit PlainTextEncoding -int 4;
defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4;

#==================================================
# Browsers

# Remove Chrome's two-finger swipe.
defaults write com.google.Chrome AppleEnableSwipeNavigateWithScrolls -bool false;
defaults write com.google.Chrome.canary AppleEnableSwipeNavigateWithScrolls -bool false;

# Allow installing user scripts via GitHub or Userscripts.org.
defaults write com.google.Chrome ExtensionInstallSources -array \
  'https://*.github.com/*' 'http://userscripts.org/*';
defaults write com.google.Chrome.canary ExtensionInstallSources -array \
  'https://*.github.com/*' 'http://userscripts.org/*';

# Set Safari’s home page to `about:blank` for faster loading.
defaults write com.apple.Safari HomePage -string 'about:blank';

# Prevent Safari from opening ‘safe’ files automatically after downloading.
defaults write com.apple.Safari AutoOpenSafeDownloads -bool false;

# Safari - search for substrings.
defaults write com.apple.Safari FindOnPageMatchesWordStartsOnly -bool false;

#==================================================
# Debugging & developer menus

# Enable Safari’s debug menu.
defaults write com.apple.Safari IncludeInternalDebugMenu -bool true;

# Enable the Develop menu and the Web Inspector in Safari.
defaults write com.apple.Safari IncludeDevelopMenu -bool true;
defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true;
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true;

# Add a context menu item for showing the Web Inspector in web views.
defaults write NSGlobalDomain WebKitDeveloperExtras -bool true;

# Enable the debug menu in Disk Utility.
defaults write com.apple.DiskUtility DUDebugMenuEnabled -bool true;
defaults write com.apple.DiskUtility advanced-image-options -bool true;

# Enable the WebKit Developer Tools in the Mac App Store.
defaults write com.apple.appstore WebKitDeveloperExtras -bool true;

# Enable Debug Menu in the Mac App Store.
defaults write com.apple.appstore ShowDebugMenu -bool true;

#==================================================
# Kill affected applications

echo -e "\a\a\a";

log_success 'macOS settings updated! Note that some of these changes require a logout/restart to take effect.';

for APP in 'Dock' 'Finder' 'SystemUIServer' ; do
  killall "${APP}" > /dev/null 2>&1
done;
