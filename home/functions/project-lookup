#!/bin/bash

##
# Change to a given project directory.
# If no argument is passed, change to ~/Projects.
##
function p() {
  if [[ ${#} -lt 1 ]]; then
    # No arguments; change to $HOME/Projects.
    cd "${HOME}/Projects";
    return;
  fi

  # We passed a project name...
  local name="${@}";

  # Locate the first matching project directory.
  local project=$(find \
    ~/Projects \
    ~/Projects/sites \
    -maxdepth 2 \
    -mindepth 2 \
    -type f \
    -iname "${name}.sublime-project" \
    -exec dirname {} \; -quit);

  # Change to the project root
  if [[ -n "${project}" ]]; then
    echo "Switching to ${project}...";
    cd "${project}";
  else
    echo "\'${name}\' not found.";
    return;
  fi

  # Ask before opening.
  printf '\n';
  printf "Open this project in your editor(s)? [Y/n]";
  read continue;

  # Conditionally set the dotfiles in place.
  if [[ "${continue}" != 'n' ]]; then
    local sublime_project=$(find . -maxdepth 1 -mindepth 1 -type f -name "${name}.sublime-project");

    if [[ -n "${sublime_project}" ]]; then
      # Open the project root in the editor
      [[ "$(type -P subl)" ]] && subl --project "${name}";

      # Open the project in the git client
      # This got annoying. I never close projects in Merge. Maybe I should start?
      # [[ "$(type -P smerge)" ]] && smerge .;
    else
      [[ "$(type -P subl)" ]] && subl .;
    fi
  fi
}
