#!/bin/bash

source ~/.local/utils

function check_for_homebrew() {
  if ! type_exists 'brew'; then
    e_header "Installing Homebrew..."
    ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"
    brew doctor
    [[ $? ]] && e_success "Homebrew installed."
  fi
}

# Check for Homebrew
check_for_homebrew

e_header "Updating Homebrew..."
brew update

e_header "Upgrading installed formulae..."
brew upgrade

# Install GNU core utilities (those that come with OS X are outdated)
brew install coreutils

# Install GNU `find`, `locate`, `updatedb`, and `xargs`, g-prefixed
brew install findutils

# Install Bash 4
brew install bash

# Install wget with IRI support
brew install wget --enable-iri

# Install more recent versions of some OS X tools
brew tap homebrew/dupes
brew install homebrew/dupes/grep
brew tap josegonzalez/homebrew-php
brew install php55

# Install other useful binaries
brew install mysql
brew install node
brew install rename
brew install tree
brew install webkit2png

brew install phantomjs
brew install casperjs

[[ $? ]] && e_success "Homebrew packages installed."  
e_warning "Don't forget to add $(brew --prefix coreutils)/libexec/gnubin to \$PATH."



# Install native apps
brew tap caskroom/cask
brew tap caskroom/versions
brew install brew-cask

[[ $? ]] && e_success "Homebrew Cask installed"

function installcask() {
  e_header "Installing ${@}..."
	brew cask install "${@}" 2> /dev/null
}

installcask bittorrent-sync
installcask chronosync
installcask chronoagent
installcask coda
installcask dropbox
installcask evernote
installcask firefox
installcask firefox-aurora
installcask flux
installcask gitbox
installcask google-chrome
installcask google-chrome-canary
installcask handbrake
installcask hazel
installcask imageoptim
installcask nvalt
installcask onyx
installcask opera
installcask opera-next
installcask qlmarkdown
installcask sequel-pro
installcask skype
installcask spotify
installcask sublime-text
installcask things
installcask totalfinder
installcask tvshows
installcask tower
installcask transmission
installcask transmit
installcask vlc

[[ $? ]] && e_success "Casks installed"

# Remove outdated versions from the cellar
brew cleanup



# Check for rvm
if ! type_exists 'rvm' ; then
  e_header "Installing RVM..."
  \curl -L https://get.rvm.io | bash -s stable --ruby=2.0.0-p353 --autolibs=enabled
  [[ $? ]] && e_success "RVM installed."
fi

rvm --default use 2.0.0-p353

e_header "Updating gem..."
gem update --system

if ! type_exists 'sass' ; then
  e_header "Installing Sass..."
  gem install sass
fi

if ! type_exists 'jekyll' ; then  
  e_header "Installing Jekyll..."
  gem install jekyll
fi

gem update

[[ $? ]] && e_success "Gems installed"



# Check for npm
if ! type_exists 'npm'; then
  brew install node
fi

e_header "Installing Node.js packages..."

# List of npm packages
local packages="bower grunt-cli jshint"

# Install packages globally and quietly
npm install $packages --g --quiet

[[ $? ]] && e_success "Done"

# download additional software
old_pwd=$(pwd)
cd ~/Downloads

function getdownload() {
  e_header "Downloading from $@"
  wget -nv --progress=bar "$@"
}

# Application versions
gawker_v="0.8.4"
grandperspective_v="1_5_1"
clusters_v="1.7"

Gawker="http://downloads.sourceforge.net/sourceforge/gawker/Gawker_$gawker_v.zip"

GrandPerspective="http://sourceforge.net/projects/grandperspectiv/files/grandperspective/1.5.1/GrandPerspective-$grandperspective_v.dmg"

ServicesManager="http://www.macosxautomation.com/services/servicesmanager/pkg/ServicesManagerInstaller.zip"

Webbla="http://www.celmaro.com/files/webbla/Webbla.zip"

Clusters="http://latenitesoft.com/clusters/download/Clusters_$clusters_v.dmg"

PastebotSync="http://tapbots.net/pastebot/PastebotSync.dmg"

getdownload "$Gawker"
getdownload "$GrandPerspective"
getdownload "$ServicesManager"
getdownload "$Webbla"
getdownload "$Clusters"
getdownload "$PastebotSync"

cd "$old_pwd"

[[ $? ]] && e_success "Done"
open ~/Downloads